[{"C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\index.js":"1","C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\reportWebVitals.js":"2","C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\App.js":"3","C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\sidebar.js":"4","C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\NavigationBar.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608061868484,"results":"8","hashOfConfig":"7"},{"size":4054,"mtime":1608078878306,"results":"9","hashOfConfig":"7"},{"size":3970,"mtime":1608079824005,"results":"10","hashOfConfig":"7"},{"size":1170,"mtime":1608079736666,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1dvgkm0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\index.js",[],["25","26"],"C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\reportWebVitals.js",[],"C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\App.js",["27","28","29","30","31","32","33"],"import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { NavigationBar } from './NavigationBar'\nimport { SideNav } from './sidebar'\nconst StyledSideNav = styled.div`   \n    position: fixed;   \n    height: 100%;\n   \n    z-index: 1;      /* Stay on top of everything */\n    top: 3.7em;      /* Stay at the top */\n    background-color: #fff; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 10px;\n    border: solid 1px light;\n`;\n\nclass App extends React.Component {\n\t constructor(props) {\n        super(props);\n         this.btnTapped = this\n            .btnTapped\n            .bind(this);\n        this.state = {\n            items: [\n                {\n                 \n                  name: 'getting Data from Chucknorris .....',\n                  \n                },\n                  \n              ],\n              items2:\"Loading ......\", items3:\"Tap An Item to display contents\",it:\"animal\"\n\n\n        }\n\n    }\n      btnTapped(e) {\n\n\n      \tthis.setState({\n        items3: \"getting in a few ...\"\n      });\n      \t this.loaddata(e);\n       \n        \n    }\n    render() {\n        const { items, activePath } = this.state;\n        return(\n        \t  <React.Fragment>\n\n            \n        \t  <NavigationBar />\n            <StyledSideNav className=\"col-2\">\n                {\n                    items.map((item) => {\n                       \n                        \treturn (\n                  <div className=\"col-12\">\n                <a  className={this.props.css} onClick={e => this.btnTapped(item.name)}>\n               { item.name }\n                 \n                </a>\n                  <hr/>\n               \n            </div>)\n                        \n                    })\n                }\n            </StyledSideNav>\n   <div className=\"container\" >\n   <div className=\"row\">\n<div className=\"col-sm-2 col-lg-2 col-md-2 \">\n\n</div>\n   \n \n<div className=\"col-sm-8 col-lg-8 col-md-8 shadow p-3 mb-5 bg-white rounded\" onClick={this.btnTapped}>\n  <div dangerouslySetInnerHTML={{__html:this.state.items3}}></div>\n  </div>\n  \n   </div>\n   </div>\n      \n           </React.Fragment>\n        );\n    }\n    onItemClick = () => {\n        alert(\"hello\");\n    }\n    loaddata(e){\n\n     fetch(\"https://api.chucknorris.io/jokes/random?category=\"+e, {\n      \"method\": \"GET\"\n    })\n    .then(response => response.json())\n    .then(response => {\n    \t\n    \tvar st=\"<div>\";\n    \tst=st+\"<label>category:     \"+response['categories']+\"</label>\"\n    \tst=st+\"<br/>\"\n    \tst=st+\"<label>Joke Created At:     \"+response['created_at']+\"</label>\"\n    \tst=st+\"<br/>\"\n    \tst=st+\"<label>Joke Updated  At:     \"+response['updated_at']+\"</label>\"\n    \t\n    \tst=st+\"<br/>\"\n    \tst=st+\"<image src='\"+response['icon_url']+ \"'/>\";\n    \tst=st+\"<br/>\"\n    \tst=st+\"<label style={ color:'red' }>Joke Of the Day:     \"+response['value']+\"</label>\"\n    \tst=st+\"</div>\"\n\n      this.setState({\n        items3: st\n      })\n    })\n    .catch(err => { console.log(err); \n    });\n    }\n \n  componentDidMount() {\n   \n    fetch(\"https://api.chucknorris.io/jokes/categories\", {\n      \"method\": \"GET\"\n    })\n    .then(response => response.json())\n    .then(response => {\n    \t\n    \tvar st=[];\n    \tfor (var i = response.length - 1; i >= 0; i--) {\n    \t\tvar j={\"name\":response[i]};\n    \t\tst.push(j);\n    \t}\n    \t\n\n      this.setState({\n        items: st\n      })\n    })\n    .catch(err => { console.log(err); \n    });\n    this.loaddata(\"animal\");\n\n  }\n  showme(){\n  \talert(\"hello\");\n  }\n\n \n\n}\n\n\nclass NavItem extends React.Component  {\n   constructor(props) {\n      super(props);\n      \n    }\n\n    handleClick = () => {\n      alert(\"hello\");\n     var p2=new App();\n    p2.btnTapped();\n\n \n     \n    }\n\n\n    render() {\n        const { active } = this.props;\n        return(\n            <div className=\"col-12\">\n                <a  className={this.props.css} onClick={this.handleClick}>\n               { this.props.name}\n                   \n                </a>\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default App;\n","C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\sidebar.js",["34","35","36"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\n\r\nconst StyledSideNav = styled.div`   \r\n    position: fixed;   \r\n    height: 100%;\r\n    width: 230px;     /* Set the width of the sidebar */\r\n    z-index: 1;      /* Stay on top of everything */\r\n    top: 3.7em;      /* Stay at the top */\r\n    background-color: #fff; /* Black */\r\n    overflow-x: hidden;     /* Disable horizontal scroll */\r\n    padding-top: 20px;\r\n    border: solid 2px lightgrey;\r\n    float:left;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activePath: props.location.pathname,\r\n            items: [\r\n                {\r\n                  path: '/', /* path is used as id to check which NavItem is active basically */\r\n                  name: 'Home',\r\n                  css: 'fas fa-home',\r\n                  key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n                },\r\n                {\r\n                  path: '/progress',\r\n                  name: 'Enrolled Courses',\r\n                  css: 'fa fa-users',\r\n                  key: 2\r\n                },\r\n                {\r\n                  path: '/monitor1',\r\n                  name: 'Progress',\r\n                  css: 'fas fa-users',\r\n                  key: 3\r\n                },\r\n                 {\r\n                  path: '/about',\r\n                  name: 'About Us',\r\n                  css: 'fas fa-users',\r\n                  key: 4\r\n                },\r\n                 {\r\n                  path: '/report',\r\n                  name: 'Report Problem',\r\n                  css: 'fas fa-users',\r\n                  key: 5\r\n                },\r\n                 {\r\n                  path: '/logout',\r\n                  name: 'Logout',\r\n                  css: 'fas fa-users',\r\n                  key: 6\r\n                },\r\n              ]\r\n        }\r\n    }\r\n\r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path });\r\n    }\r\n\r\n    render() {\r\n        const { items, activePath } = this.state;\r\n        return(\r\n            <StyledSideNav>\r\n                {\r\n                    items.map((item) => {\r\n                        return (\r\n                            <NavItem \r\n                                path={item.path}\r\n                                name={item.name}\r\n                                css={item.css}\r\n                                onItemClick={this.onItemClick}\r\n                                active={item.path === activePath}\r\n                                key={item.key}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst StyledNavItem = styled.div`\r\n    height: 70px;\r\n    width: 75px; /* width must be same size as NavBar to center */\r\n    text-align: center; /* Aligns <a> inside of NavIcon div */\r\n    margin-left: 1em;\r\n    margin-bottom: 0;   /* Puts space between NavItems */\r\n    a {\r\n        font-size: 1.7em;\r\n        color: ${(props) => props.active ? \"#565656\" : \"DarkGray\"};\r\n        :hover {\r\n            opacity: 0.7;\r\n            text-decoration: none; /* Gets rid of underlining of icons */\r\n        }  \r\n    }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.props;\r\n        return(\r\n            <StyledNavItem active={active}>\r\n                <Link to={this.props.path} tabIndex=\"name\" className={this.props.css} onClick={this.handleClick}>\r\n               { this.props.name}\r\n                    <NavIcon></NavIcon>\r\n                </Link>\r\n            </StyledNavItem>\r\n        );\r\n    }\r\n}\r\n\r\nconst NavIcon = styled.div`\r\n\r\n`;\r\n\r\nexport default SideNav","C:\\Users\\Hitman\\Desktop\\ELHUB\\E-Hub\\src\\NavigationBar.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":10,"nodeType":"43","messageId":"44","endLine":5,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":50,"column":24,"nodeType":"43","messageId":"44","endLine":50,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":62,"column":17,"nodeType":"48","endLine":62,"endColumn":89},{"ruleId":"41","severity":1,"message":"49","line":155,"column":7,"nodeType":"43","messageId":"44","endLine":155,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":156,"column":4,"nodeType":"52","messageId":"53","endLine":159,"endColumn":6},{"ruleId":"41","severity":1,"message":"54","line":172,"column":17,"nodeType":"43","messageId":"44","endLine":172,"endColumn":23},{"ruleId":"46","severity":1,"message":"47","line":175,"column":17,"nodeType":"48","endLine":175,"endColumn":75},{"ruleId":"41","severity":1,"message":"55","line":3,"column":27,"nodeType":"43","messageId":"44","endLine":3,"endColumn":33},{"ruleId":"41","severity":1,"message":"56","line":3,"column":35,"nodeType":"43","messageId":"44","endLine":3,"endColumn":40},{"ruleId":"41","severity":1,"message":"57","line":3,"column":48,"nodeType":"43","messageId":"44","endLine":3,"endColumn":58},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'SideNav' is defined but never used.","Identifier","unusedVar","'activePath' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavItem' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'active' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]